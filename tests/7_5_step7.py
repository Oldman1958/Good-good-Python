"""
 (Для закрепления предыдущего материала).
 На вход программе подается таблица целых чисел (см. пример ниже)
 размером N x N элементов (N определяется по входным данным).
 Необходимо прочитать эти числа и сохранить в виде двумерного (вложенного) списка lst2D размером N x N элементов.
 Полученная таблица будет содержать нули и кое-где единицы.
 С помощью функции с именем verify, на вход которой подается двумерный список чисел (первый параметр),
 необходимо проверить, являются ли единицы изолированными друг от друга, то есть, вокруг каждой единицы должны быть нули.

Рекомендуется следующий алгоритм.
В функции verify производить перебор двумерного списка.
Для каждого элемента (списка) со значением 1 вызывать еще одну вспомогательную функцию is_isolate
для проверки изолированности единицы.
То есть, функция is_isolate должна возвращать True, если единица изолирована и False в противном случае.

Как только встречается не изолированная единица, функция verify должна возвращать False.
Если успешно доходим (по элементам списка) до конца, то возвращается значение True.

Функцию verify выполнять не нужно, только объявить.

P. S. При реализации функции is_isolate не следует прописывать восемь операторов if.
Подумайте, как это можно сделать красивее (с точки зрения реализации алгоритма).
"""

import sys


# здесь объявляйте функцию
def verify(lst2D):
    lenght = len(lst2D)  # размер квадратной матрицы
    for i in range(lenght):
        for j in range(lenght):
            if lst2D[i][j] == 1:
                flag = is_isolate(lst2D, lenght, i, j)
                if flag == False:
                    return False
    return True


def is_isolate(lst_in, lenght, i, j):
    for ik in range(-1, 2):  # шаг смещения индекса строки (-1, 0 или 1)
        for jk in range(-1, 2):  # шаг смещения индекса столбца (-1, 0 или 1)
            i_ik = i + ik if (0 < i + ik < lenght) else i  # индекс строки со смещением
            j_jk = j + jk if (0 < j + jk < lenght) else j  # индекс столбца со смещением
            if i_ik != i or j_jk != j:
                if lst2D[i_ik][j_jk] == 1:
                    return False
    return True


lines = sys.stdin.readlines()  # чтение строк из входного потока (переменную lines не менять)

# здесь продолжайте программу по формированию двумерного списка lst2D

lst2D = [list(map(int, s.strip('\n').split())) for s in lines]

