"""
Объявите функцию с именем get_list, одним параметром и следующим описанием в теле функции:

'''Функция для формирования списка целых значений'''

Сама функция должна формировать и возвращать список целых чисел, который передается ей на вход в виде строки из целых чисел,
записанных через пробел.

Определите декоратор, который выполняет суммирование значений списка,
возвращаемого декорируемой функцией и возвращает результат.
Внутри декоратора декорируйте переданную функцию с помощью команды @wraps
(не забудьте сделать импорт: from functools import wraps).

Такое декорирование необходимо, чтобы исходная функция get_list сохраняла свои локальные свойства: __name__ и __doc__.

Примените декоратор к функции get_list, но не вызывайте ее.
"""

from functools import wraps


def get_sum_list(func):
    @wraps(func)
    def wrapper(s):
        return sum(func(s))


    return wrapper


@get_sum_list
def get_list(s):
    '''Функция для формирования списка целых значений'''

    return list(map(int, s.split()))

"""
Фрагмент кода для проверки решения
nums = '2 5 6 4 -8 22 -4 0'
print(get_list(nums))
print(get_list.__doc__)
print(get_list.__name__)
"""

